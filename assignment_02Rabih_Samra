# Exercise 1:

def factorial(n):
    if n < 0:
        print("incorrect intenger")

    result = 1
    while n > 0:
        result *= n
        n -= 1
        return result
    num = int(input("Enter a non-negative integer: "))
    if result != 0:
        print("The factorial of", num, "is", result)
    else:
        print("Error calculating factorial")


    # EXERCISE 2:
def find_divisors(n):
    list_of_divisors = [1, n]

    for i in range(2, n):
        if n % i == 0:
            list_of_divisors.append(i)
    return list_of_divisors
num = int(input("Enter a number:"))
divisors = find_divisors(num)
print("Divisors of", num, ":", divisors)
        

# Exercise 3:

string = "victory is ours"
string_reversed = string[::-1]
print(string_reversed)


# Exercise 4:
def extract_even_numbers(numbers):
    even_numbers = []
    for number in numbers:
        if number % 2 == 0:
            even_numbers.append(number)
    return even_numbers
numbers_input = input("Enter a list of numbers separated by commas: ")
numbers = [int(i) for i in numbers_input.split(",")]
even_numbers = extract_even_numbers(numbers)
print("even numbers", even_numbers)


# number 5:

def check_strenght_password(password):
    has_uppercase = False
    has_lowercase = False
    has_digit = False
    has_special_character = False

    for character in password:
        print(character)
        if character.isupper():
            has_uppercase = True
            print("has uppercase")
        elif character.islower():
            print("lower case")
            has_lowercase = True
        elif character in ["#","?","!","$"]: 
            print("has character")
            has_special_character = True
        elif character.isdigit:
            print("has digit")
            has_digit = True
    if len(password) >= 8 and has_uppercase and has_lowercase and has_digit and has_special_character:
        print("Strong password")
    else:
        print("Weak password")

password = str(input("Enter a password:"))
pasword_strenght = check_strenght_password(password)
